// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Account {
  id Int @id @default(autoincrement())
  name String?
  notionToken String?
  notionPageId String?
  createdAt DateTime @default(now()) @map("created_at")
  updateAt DateTime @updatedAt @map("update_at")
  status STATUS_ACCOUNT @default(FREE)
  owner User @relation(fields: [ownerId], references: [id])
  ownerId Int @unique
  users AccountUser[]
  folders Folder[]
  @@map("accounts")
}

model AccountUser {
  id Int @id @default(autoincrement())
  account Account @relation(fields: [accountId], references: [id])
  accountId Int
  user User @relation(fields: [userId], references: [id])
  userId Int
  role ROLE_ACCOUNT @default(VIEWER)
  @@map("account_users")
}

model User {
  id Int @id @default(autoincrement())
  password String
  email String @unique @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at")
  updateAt DateTime @updatedAt @map("update_at")
  confirmed Boolean @default(false)
  confirmationToken confirmationToken[]
  account Account?
  accountUser AccountUser[]
  @@map("users")
}

model Session {
  id        Int   @id @default(autoincrement())
  sid       String   @unique
  expire   DateTime
  sess   Json
  @@map("sessions")
}

model confirmationToken {
  id        Int @id @default(autoincrement())
  token     String @unique
  user      User @relation(fields: [userId], references: [id])
  userId    Int 
  expiresAt DateTime
  @@map("confirmation_tokens")
}


model Folder {
  id Int @id @default(autoincrement())
  name String
  createdAt DateTime @default(now()) @map("created_at")
  updateAt DateTime @updatedAt @map("update_at")
  account Account @relation(fields: [accountId], references: [id])
  accountId Int
  charts Chart[]
  @@map("folders")
}

model Chart {
  id Int @id @default(autoincrement())
  title String
  currentChartType CHART_TYPE @default(LINE)
  createdAt DateTime @default(now()) @map("created_at")
  updateAt DateTime @updatedAt @map("update_at")
  folder Folder @relation(fields: [folderId], references: [id])
  folderId Int 
  chartData ChartData[]
  @@map("charts")
}

model ChartData {
  id Int @id @default(autoincrement())
  data Json
  chartType CHART_TYPE
  createdAt DateTime @default(now()) @map("created_at")
  updateAt DateTime @updatedAt @map("update_at")
  chart Chart @relation(fields: [chartId], references: [id])
  chartId Int
  @@map("chart_data")
}


enum CHART_TYPE {
  LINE
  BAR
  PIE
  DOUGHNUT
}

enum ROLE_ACCOUNT {
  ADMIN
  VIEWER
}

enum STATUS_ACCOUNT {
  GOD
  TESTER
  PRO
  FREE
}